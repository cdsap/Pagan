name: Experiment

on:
  workflow_dispatch:
    inputs:
      repository:
        required: true
        default: "cdsap/ExperimentGradle8.9"
      variantA:
        required: true
        default: "gradle_8_8"
      variantB:
        required: true
        default: "gradle_8_9"
      task:
        default: ":core:model:compileKotlin"
        required: true
      iterations:
        default: 10
        required: true
      mode:
        description: "Type of execution relative to caching"
        type: choice
        required: true
        default: 'dependencies cache'
        options:
          - 'no caching'
          - 'dependencies cache'
          - 'local build cache + dependencies cache' 
          - 'remote cache' 
          - 'remote cache + dependencies cache'
      taskpathreport:
        description: "Include experiment results by task path"
        type: choice
        required: true
        default: 'true'
        options:
          - true
          - false
      kotlinreport:
        description: "Include Kotlin Build reports in the experiment results"
        type: choice
        required: true
        default: 'true'
        options:
          - true
          - false
      additional_args:
        description: JSON of additional options
        type: string
        default: "{javaVariantA:'17',javaVariantB:'17',extraArgsVarinatA:' ',extraArgsVariantB:' '}"
        required: false          


run-name: "${{ github.event.inputs.repository }}-${{ github.event.inputs.mode }}-${{ github.event.inputs.variantA }}-${{ github.event.inputs.variantB }}-${{ github.event.inputs.task }}"

jobs:
  iterations:
    name: Generate versions
    runs-on: ubuntu-latest
    steps:
      - id: calculate_iterations
        run: |
          iterations="["
          for i in {1..${{ github.event.inputs.iterations }}}
          do
            if [ $i == 1 ]
            then
              iterations="$iterations \"$i\""
            else
              iterations="$iterations  , \"$i\""
            fi
          done
          iterations="$iterations ]"
          echo "iterations=$iterations" >> $GITHUB_OUTPUT
          echo $GITHUB_OUTPUT
    outputs:
      iterations: ${{ steps.calculate_iterations.outputs.iterations }}

  seed:
    if: github.event.inputs.mode != 'no caching'
    needs: [iterations]
    strategy:
      matrix:
        variant: ["${{ github.event.inputs.variantA }}","${{ github.event.inputs.variantB }}"]
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/workflows/runner-seed
        with:
          task: "${{ github.event.inputs.task }}"
          mode: "${{ github.event.inputs.mode }}"
          experiment-id: "${{github.run_number}}"
          variant: ${{ matrix.variant }}
          run-id: 1
          api-key: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
          repository: ${{ github.event.inputs.repository }}
          extra-args: ${{ (matrix.variant == github.event.inputs.variantA) &&  fromJson(github.event.inputs.additional_args).extraArgsVarinatA || (matrix.variant == github.event.inputs.variantB) &&  fromJson(github.event.inputs.additional_args).extraArgsVarinatB }} 
          jdk: ${{ (matrix.variant == github.event.inputs.variantA) && fromJson(github.event.inputs.additional_args).javaVariantA || (matrix.variant == github.event.inputs.variantB) &&  fromJson(github.event.inputs.additional_args).javaVariantB }} 
          cache-url: ${{ secrets.CI_URL_CACHE_NODE }}
      - uses: actions/checkout@v4
    outputs:
      iterations: ${{ needs.iterations.outputs.iterations }}
      skip: ${{ github.event.inputs.mode == 'no caching' }}

  execution-caching:
    if: github.event.inputs.mode != 'no caching'
    needs: [seed]
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        variant: ["${{ github.event.inputs.variantA }}","${{ github.event.inputs.variantB }}"]
        runs: ${{ fromJson(needs.seed.outputs.iterations) }}
    steps:
      - uses: actions/checkout@v4
      - name: Conditionally wait for seed job
        if: ${{ github.event.inputs.mode != 'no caching' }}
        run: echo "Waiting for seed job to complete"
      - uses: ./.github/workflows/runner
        with:
          task: "${{ github.event.inputs.task }}"
          mode: "${{ github.event.inputs.mode }}"
          experiment-id: "no-profile-${{github.run_number}}"
          execution-number: ${{github.run_number}}
          variant: ${{ matrix.variant }}
          api-key: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
          cache-url: ${{ secrets.CI_URL_CACHE_NODE }}
          repository: ${{ github.event.inputs.repository }}
          extra-args: ${{ (matrix.variant == github.event.inputs.variantA) &&  fromJson(github.event.inputs.additional_args).extraArgsVarinatA || (matrix.variant == github.event.inputs.variantB) &&  fromJson(github.event.inputs.additional_args).extraArgsVarinatB }} 
          jdk: ${{ (matrix.variant == github.event.inputs.variantA) && fromJson(github.event.inputs.additional_args).javaVariantA || (matrix.variant == github.event.inputs.variantB) &&  fromJson(github.event.inputs.additional_args).javaVariantB }} 
      - uses: actions/checkout@v4

  execution-no-caching:
    if: github.event.inputs.mode == 'no caching'
    needs: [iterations]
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        variant: ["${{ github.event.inputs.variantA }}","${{ github.event.inputs.variantB }}"]
        runs: ${{ fromJson(needs.iterations.outputs.iterations) }}
    steps:
      - uses: actions/checkout@v4
      - name: Conditionally wait for seed job
        if: ${{ github.event.inputs.mode != 'no caching' }}
        run: echo "Waiting for seed job to complete"
      - uses: ./.github/workflows/runner
        with:
          task: "${{ github.event.inputs.task }}"
          mode: "${{ github.event.inputs.mode }}"
          experiment-id: "no-profile-${{github.run_number}}"
          execution-number: ${{github.run_number}}
          variant: ${{ matrix.variant }}
          api-key: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
          repository: ${{ github.event.inputs.repository }}
          extra-args: ${{ (matrix.variant == github.event.inputs.variantA) &&  fromJson(github.event.inputs.additional_args).extraArgsVarinatA || (matrix.variant == github.event.inputs.variantB) &&  fromJson(github.event.inputs.additional_args).extraArgsVarinatB }} 
          jdk: ${{ (matrix.variant == github.event.inputs.variantA) && fromJson(github.event.inputs.additional_args).javaVariantA || (matrix.variant == github.event.inputs.variantB) &&  fromJson(github.event.inputs.additional_args).javaVariantB }} 
      - uses: actions/checkout@v4

  report-no-caching:
    runs-on: "ubuntu-latest"
    needs: [execution-no-caching]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/workflows/report
        with:
          task: "${{ github.event.inputs.task }}"
          experiment-id: "no-profile-${{github.run_number}}"
          tags: "${{ github.event.inputs.variantA }},${{ github.event.inputs.variantB }}"
          api-key: ${{ secrets.GE_API_KEY }}
          url: ${{ secrets.GE_URL }}
          gh_token: ${{secrets.GITHUB_TOKEN}}
          profile: false
          taskpathreport: ${{ github.event.inputs.taskpathreport }}
          processreport: true
          kotlinreport: ${{ github.event.inputs.kotlinreport }}
      - uses: actions/checkout@v4

  report:
    runs-on: "ubuntu-latest"
    needs: [execution-caching]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/workflows/report
        with:
          task: "${{ github.event.inputs.task }}"
          experiment-id: "no-profile-${{github.run_number}}"
          tags: "${{ github.event.inputs.variantA }},${{ github.event.inputs.variantB }}"
          api-key: ${{ secrets.GE_API_KEY }}
          url: ${{ secrets.GE_URL }}
          gh_token: ${{secrets.GITHUB_TOKEN}}
          profile: false
          taskpathreport: ${{ github.event.inputs.taskpathreport }}
          processreport: true
          kotlinreport: ${{ github.event.inputs.kotlinreport }}
      - uses: actions/checkout@v4      